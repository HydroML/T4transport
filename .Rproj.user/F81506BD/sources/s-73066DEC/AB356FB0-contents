#include "RcppArmadillo.h"
#ifdef _OPENMP
// [[Rcpp::plugins(openmp)]]
#include <omp.h>
#endif

using namespace Rcpp;
using namespace arma;
using namespace std;

// [[Rcpp::export]]
arma::vec test_omp(arma::mat& X, int nthread){
  int n = X.n_rows;
  int p = X.n_cols;
  int i;
  arma::mat outmat(n,p,fill::zeros);
  arma::vec outvec(n,fill::zeros);
  
#ifdef _OPENMP
#pragma omp parallel num_threads(nthread) default(none) shared(p, outmat, X, outvec) private(i)
{
#pragma omp for
  for (i=0; i<p; i++){
    outmat.col(i) = X.col(i)*2;
  }
#pragma omp single
  outvec = arma::sum(outmat, 1);
}
#else
  for (i=0; i<p; i++){
    outmat.col(i) = X.col(i)*2;
  }
  outvec = arma::sum(outmat, 1);
#endif
  
  return(outvec);
}
