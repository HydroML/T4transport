mydata   = c()
for (i in 1:10){
ni = sample(50:100, 1)
measures[[i]] = matrix(rnorm(ni*2, mean=-4, sd=0.1),ncol=2)
mydata = rbind(mydata, measures[[i]])
}
for (j in 11:20){
nj = sample(50:100, 1)
measures[[j]] = matrix(rnorm(nj*2, mean=+4, sd=0.1),ncol=2)
mydata = rbind(mydata, measures[[i]])
}
plot(mydata)
#  Empirical Measures
set.seed(100)
measures = list()
mydata   = c()
for (i in 1:10){
ni = sample(50:100, 1)
measures[[i]] = matrix(rnorm(ni*2, mean=-4, sd=0.1),ncol=2)
mydata = rbind(mydata, measures[[i]])
}
for (j in 11:20){
nj = sample(50:100, 1)
measures[[j]] = matrix(rnorm(nj*2, mean=+4, sd=0.1),ncol=2)
mydata = rbind(mydata, measures[[j]])
}
plot(mydata)
set.seed(100)
measures = list()
mydata   = c()
for (i in 1:10){
ni = sample(50:100, 1)
measures[[i]] = matrix(rnorm(ni*2, mean=-4),ncol=2)
mydata = rbind(mydata, measures[[i]])
}
for (j in 11:20){
nj = sample(50:100, 1)
measures[[j]] = matrix(rnorm(nj*2, mean=+4),ncol=2)
mydata = rbind(mydata, measures[[j]])
}
plot(mydata)
points(support, col="red")
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
plot(mydata)
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
plot(mydata, cex=0.5)
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.25)
barplot(comp1)
barplot(comp1)
comp1 = barysinkhorn14(support, measures, lambda=0.1)
barplot(comp1)
comp1 = barysinkhorn14(support, measures, lambda=1)
barplot(comp1)
comp1 = barysinkhorn14(support, measures, lambda=10)
barplot(comp1)
comp1
library(T4transport)
comp1 = barysinkhorn14(support, measures, lambda=10)
library(T4transport)
comp1 = barysinkhorn14(support, measures, lambda=10)
comp1 = barysinkhorn14(support, measures, lambda=10)
comp1 = barysinkhorn14(support, measures, lambda=1)
comp1 = barysinkhorn14(support, measures, lambda=1)
plot(comp1)
length(seq(from=-6,to=6,by=2))
comp1 = barysinkhorn14(support, measures, lambda=1)
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.01)
comp2 = barysinkhorn14(support, measures, lambda=0.1)
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.01)
comp2 = barysinkhorn14(support, measures, lambda=0.1)
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.01)
comp2 = barysinkhorn14(support, measures, lambda=0.1)
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.01)
comp2 = barysinkhorn14(support, measures, lambda=0.1)
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.01)
comp2 = barysinkhorn14(support, measures, lambda=0.1)
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.01)
comp2 = barysinkhorn14(support, measures, lambda=0.1)
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.01)
comp2 = barysinkhorn14(support, measures, lambda=0.1)
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.01)
comp2 = barysinkhorn14(support, measures, lambda=0.1)
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.01)
comp2 = barysinkhorn14(support, measures, lambda=0.1)
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.01)
comp2 = barysinkhorn14(support, measures, lambda=0.1)
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.01)
comp2 = barysinkhorn14(support, measures, lambda=0.1)
comp2 = barysinkhorn14(support, measures, lambda=1)
comp1 = barysinkhorn14(support, measures, lambda=0.5)
comp2 = barysinkhorn14(support, measures, lambda=1)
barplot(comp1)
barplot(comp2)
comp3 = barysinkhorn14(support, measures, lambda=50)
barplot(comp3)
library(T4transport)
1
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.5)
comp2 = barysinkhorn14(support, measures, lambda=5)
comp3 = barysinkhorn14(support, measures, lambda=50)
comp2 = barysinkhorn14(support, measures, lambda=1)
comp3 = barysinkhorn14(support, measures, lambda=5)
comp3
sum(comp3)
help(barplot)
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3))
barplot(comp1)
barplot(comp2)
barplot(comp3)
par(opar)
comp1 = barysinkhorn14(support, measures, lambda=0.1)
barplot(comp1)
comp1 = barysinkhorn14(support, measures, lambda=0.25)
barplot(comp1)
barplot(comp2)
barplot(comp3)
library(T4transport)
comp1 = barysinkhorn14(support, measures, lambda=0.25)
comp2 = barysinkhorn14(support, measures, lambda=1)
comp3 = barysinkhorn14(support, measures, lambda=5)
## VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3))
barplot(comp1)
barplot(comp2)
barplot(comp3)
comp3 = barysinkhorn14(support, measures, lambda=500)
## VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3))
barplot(comp1)
barplot(comp2)
barplot(comp3)
par(opar)
comp1 = barysinkhorn14(support, measures, lambda=0.5)
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3))
barplot(comp1)
barplot(comp2)
barplot(comp3)
comp1 = barysinkhorn14(support, measures, lambda=0.5)
comp2 = barysinkhorn14(support, measures, lambda=1)
comp3 = barysinkhorn14(support, measures, lambda=5)
## VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3))
barplot(comp1)
barplot(comp2)
barplot(comp3)
par(opar)
help(barplot)
sum(comp1)
sum(comp2)
sum(comp3)
library(T4transport)
## GENERATE DATA
#  Empirical Measures
set.seed(100)
dat1 = matrix(rnorm(sample(200:500, 1)*2, mean=-4, sd=0.5),ncol=2)
dat2 = matrix(rnorm(sample(200:500, 1)*2, mean=+4, sd=0.5),ncol=2)
measures = list()
measures[[1]] = dat1
measures[[2]] = dat2
mydata = rbind(dat1, dat2)
#  Fixed Support
support = cbind(seq(from=-8,to=8,by=2),
seq(from=-8,to=8,by=2))
## COMPUTE
comp1 = barysinkhorn14(support, measures, lambda=0.5)
comp2 = barysinkhorn14(support, measures, lambda=1)
comp3 = barysinkhorn14(support, measures, lambda=5)
## VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3))
barplot(comp1, main="lambda=0.5")
barplot(comp2, main="lambda=1")
barplot(comp3, main="lambda=5")
par(opar)
library(T4transport)
library(T4transport)
library(T4transport)
rm(list=ls())
data("three")
digit3 = three[1:1000]
usethis::use_data(digit3)
help(three)
#' MNIST Images of digit 3
#'
#'
#' @concept data
#'
digit3 = three[sample(1:4351, 2000)]
usethis::use_data(digit3, overwrite = TRUE)
## LOAD THE DATA
data(digit3)
## SHOW A FEW
opar <- par(no.readonly=TRUE)
par(mfrow=c(2,4), pty="s")
for (i in 1:8){
image(digit3[[i]])
}
par(opar)
digit3 = three[sample(1:4351, 2000)]
for (i in 1:2000){
tgt = digit3[[i]]
digit3[[i]] = tgt/base::sum(tgt)
}
unlist(lapply(digit3, sum))
usethis::use_data(digit3, overwrite = TRUE)
library(T4transport)
help("rev")
seq(0,1,length.out=10)
rev(seq(0,1,length.out=10))
seq(1,0,length.out=10)
help(median)
library(T4transport)
data("digit3")
data("digit3")
pdat  = digit3[1:2]
outim = image14C(pdat)
pdat
dim(pdat[[1]])
dim(pdat[[2]])
library(T4transport)
data("digit3")
pdat  = digit3[1:2]
outim = image14C(pdat)
library(T4transport)
library(T4transport)
library(T4transport)
library(T4transport)
library(T4transport)
data("digit3")
pdat  = digit3[1:10]
out10 = image14C(pdat, maxiter=10, print.progress=TRUE)
out20 = image14C(pdat, maxiter=10, print.progress=TRUE, init.image=out10)
out50 = image14C(pdat, maxiter=30, print.progress=TRUE, init.image=out20)
par(mfrow=c(1,3))
image(out10)
image(out20)
image(out30)
image(out50)
out100 = image14C(pdat, maxiter=50, print.progress=TRUE, init.image=out50)
out500 = image14C(pdat, maxiter=50, print.progress=TRUE, init.image=out100)
par(mfrow=c(1,3), pty="s")
image(out10,  main="after 10 iterations")
image(out100, main="after 100 iterations")
image(out500, main="after 150 iterations")
pdat  = digit3[1:10]
out10 = image14C(pdat, maxiter=10, print.progress=TRUE)
out20 = image14C(pdat, maxiter=10, print.progress=TRUE, init.image=out10)
out50 = image14C(pdat, maxiter=30, print.progress=TRUE, init.image=out20)
out100 = image14C(pdat, maxiter=50, print.progress=TRUE, init.image=out50)
out200 = image14C(pdat, maxiter=100, print.progress=TRUE, init.image=out100)
out500 = image14C(pdat, maxiter=300, print.progress=TRUE, init.image=out200)
par(mfrow=c(1,3), pty="s")
image(out10,  main="after 10 iterations")
image(out100, main="after 100 iterations")
image(out500, main="after 500 iterations")
data(digit3)
smalldat = digit3[1:2]
smallout = image14C(smalldat, maxiter=3)
opar <- par(no.readonly=TRUE)
par(pty="s")
image(smallout, main="after 3 iterations")
par(opar)
dat2 = digit3[sample(1:2000, 100)]
length(digit3)
image(digit3[[10]], axes=FALSE)
# RANDOMLY SELECT THE IMAGES
dat2 = digit3[sample(1:2000, 100)]  # select 100 images
# RUN SEQUENTIALLY
run010 = image14C(dat2, maxiter=10)                    # first 10 iterations
run050 = image14C(dat2, maxiter=40, init.image=run010) # run 40 more
run100 = image14C(dat2, maxiter=50, init.image=run050) # run 50 more
# VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
image(dat2[sample(100,1)], axes=FALSE, main="a random image")
image(run010, axes=FALSE, main="after 10 iterations")
image(run050, axes=FALSE, main="after 50 iterations")
image(run100, axes=FALSE, main="after 100 iterations")
par(opar)
library(T4transport)
graphics.off()
library(T4transport)
# RANDOMLY SELECT THE IMAGES
dat2 = digit3[sample(1:2000, 100)]  # select 100 images
# RUN SEQUENTIALLY
run10 = image14C(dat2, maxiter=10)                   # first 10 iterations
run20 = image14C(dat2, maxiter=10, init.image=run10) # run 40 more
run50 = image14C(dat2, maxiter=30, init.image=run50) # run 50 more
# VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
image(dat2[sample(100,1)], axes=FALSE, main="a random image")
image(run10, axes=FALSE, main="after 10 iterations")
image(run20, axes=FALSE, main="after 20 iterations")
image(run50, axes=FALSE, main="after 50 iterations")
par(opar)
run50 = image14C(dat2, maxiter=30, init.image=run20) # run 50 more
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
image(dat2[[sample(100,1)]], axes=FALSE, main="a random image")
image(run10, axes=FALSE, main="after 10 iterations")
image(run20, axes=FALSE, main="after 20 iterations")
image(run50, axes=FALSE, main="after 50 iterations")
par(opar)
par(mfrow=c(2,3), pty="s")
image(dat2[[sample(100,1)]], axes=FALSE, main="a random image 1")
image(dat2[[sample(100,1)]], axes=FALSE, main="a random image 2")
image(dat2[[sample(100,1)]], axes=FALSE, main="a random image 3")
image(run10, axes=FALSE, main="after 10 iterations")
image(run20, axes=FALSE, main="after 20 iterations")
image(run50, axes=FALSE, main="after 50 iterations")
image(run10, axes=FALSE, main="barycenter after 10 iter")
opar <- par(no.readonly=TRUE)
par(mfrow=c(2,3), pty="s")
image(dat2[[sample(100,1)]], axes=FALSE, main="a random image")
image(dat2[[sample(100,1)]], axes=FALSE, main="a random image")
image(dat2[[sample(100,1)]], axes=FALSE, main="a random image")
image(run10, axes=FALSE, main="barycenter after 10 iter")
image(run20, axes=FALSE, main="barycenter after 20 iter")
image(run50, axes=FALSE, main="barycenter after 50 iter")
par(opar)
rm(list=ls())
library(T4transport)
library(T4transport)
rm(list=ls())
library(T4transport)
library(T4transport)
library(T4transport)
library(T4transport)
library(T4transport)
??sanitize
usethis::git_vaccinate()
usethis::use_mit_license()
usethis::use_news_md()
library(T4transport)
usethis::use_travis()
usethis::use_readme_rmd()
usethis::use_travis_badge()
library(T4transport)
library(T4transport)
pkgdown::init_site()
pkgdown::build_favicons()
pkgdown::build_favicons(overwrite = TRUE)
pkgdown::build_site()
pkgdown::build_home()
pkgdown::as_pkgdown()
rm(list=ls())
pkgdown::build_site()
library(T4transport)
library(T4transport)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(T4transport)
library(T4transport)
pkgdown::build_site()
library(T4transport)
library(T4transport)
