library(T4transport)
rm(list=ls())
library(T4transport)
library(T4transport)
library(T4transport)
X
Y
X = matrix(rnorm(m*2, mean=-1),ncol=2) # m obs. for X
Y = matrix(rnorm(n*2, mean=+1),ncol=2) # n obs. for Y
m = sample(50:100, 1)
n = sample(50:100, 1)
X = matrix(rnorm(m*2, mean=-1),ncol=2) # m obs. for X
Y = matrix(rnorm(n*2, mean=+1),ncol=2) # n obs. for Y
m = 10
n = 5
X = matrix(rnorm(m*2, mean=-1),ncol=2) # m obs. for X
Y = matrix(rnorm(n*2, mean=+1),ncol=2) # n obs. for Y
DX = as.matrix(dist(X))
DY = as.matrix(dist(Y))
hey = c(DX, DY)
hey
library(T4transport)
library(T4transport)
rm(list=ls())
library(T4transport)
pkgdown::build_site()
library(T4transport)
library(T4transport)
pkgdown::build_site()
library(T4transport)
pkgdown::build_site()
pkgdown::build_site()
library(T4transport)
install.packages("greta")
library(T4transport)
library(T4transport)
library(T4transport)
library(T4transport)
datsmall = digit3[1:2]
data(digit3)
datsmall = digit3[1:2]
outsmall = image15B(datsmall, maxiter=3)
image(outsmall)
library(T4transport)
datsmall
lapply(datsmall, sum)
# GENERATE FROM TWO GAUSSIANS WITH DIFFERENT MEANS
set.seed(100)
x  = stats::rnorm(1000, mean=-4, sd=0.5)
y  = stats::rnorm(1000, mean=+4, sd=0.5)
bk = seq(from=-10, to=10, length.out=20)
# HISTOGRAMS WITH COMMON BREAKS
histxy = list()
histxy[[1]] = hist(x, breaks=bk, plot=FALSE)
histxy[[2]] = hist(y, breaks=bk, plot=FALSE)
# COMPUTE
hh = hist14C(histxy, maxiter=5)
# VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2))
barplot(histxy[[1]]$density, col=rgb(0,0,1,1/4),
ylim=c(0, 0.75), main="Two Histograms")
barplot(histxy[[2]]$density, col=rgb(1,0,0,1/4),
ylim=c(0, 0.75), add=TRUE)
barplot(hh$density, main="Barycenter",
ylim=c(0, 0.75))
par(opar)
hh
pkgdown::build_site()
library(T4transport)
data("digits3")
data("digits4")
data("digit3")
data("digit4")
gathered = c(digit3[sample(1:2000, 7)], digit4[sample(1:2000, 3)])
gathered = c(digit3[sample(1:2000, 7)], digit4[sample(1:2000, 3)])
fbary1   = image15B(gathered, p=1, maxiter=50, print.progress=TRUE)
fbary2   = image15B(gathered, p=2, maxiter=50, print.progress=TRUE)
fmedian  = medimage22Y(gathered, print.progress=TRUE, maxiter=20)
par(mfrow=c(1,2), pty="s")
image(digit3[[1]])
image(digit4[[1]])
par(mfrow=c(1,3), pty="s")
image(fbary1)
image(fbary2)
image(fmedian)
sum(fmedian)
par(mfrow=c(2,5), pty="s")
for (i in 1:10){
image(gathered[[i]])
}
library(T4transport)
# parameter setup ---------------------------------------------------------
nimages = cbind(seq(from=50, to=30, by=-5), seq(from=0, to=20, by=5))
images
nimages
library(T4transport)
pkgdown::build_site()
library(T4transport)
source("~/Desktop/project_WassMedian/code_grid/hist_experiment1.R")
source("~/Desktop/project_WassMedian/code_grid/hist_experiment1.R")
library(T4transport)
data(digit3)
datsmall = digit3[1:3]
# Compute
outsmall = medimage22Y(datsmall, print.progress=TRUE)
data(digit3)
datsmall = digit3[1:3]
# COMPUTE
outsmall = imagemed22Y(datsmall, print.progress=TRUE)
library(T4transport)
data(digit3)
datsmall = digit3[1:3]
# COMPUTE
outsmall = imagemed22Y(datsmall, maxiter=10, print.progress=TRUE)
library(T4transport)
#----------------------------------------------------------------------
# LOAD THE DATA
data(digit3)
datsmall = digit3[1:3]
# COMPUTE
outsmall = imagemed22Y(datsmall, maxiter=10, print.progress=TRUE)
image(outsmall, xaxt='n', yaxt='n', main="Barycenter")
image(datsmall[[1]], xaxt='n', yaxt='n')
# LOAD THE DATA
data(digit3)
datsmall = digit3[1:10]
# COMPUTE
outsmall = imagemed22Y(datsmall, maxiter=5)
# VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(2,2), pty="s")
image(outsmall,      xaxt='n', yaxt='n', main="Barycenter")
image(datsmall[[3]], xaxt='n', yaxt='n', main="3rd image")
image(datsmall[[6]], xaxt='n', yaxt='n', main="6th image")
image(datsmall[[9]], xaxt='n', yaxt='n', main="9th image")
par(opar)
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
image(outsmall,      xaxt='n', yaxt='n', main="Barycenter")
image(datsmall[[3]], xaxt='n', yaxt='n', main="3rd image")
image(datsmall[[6]], xaxt='n', yaxt='n', main="6th image")
image(datsmall[[9]], xaxt='n', yaxt='n', main="9th image")
par(opar)
# VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
image(outsmall, xaxt='n', yaxt='n', main="Wasserstein Median")
image(datsmall[[3]], xaxt='n', yaxt='n', main="3rd image")
image(datsmall[[6]], xaxt='n', yaxt='n', main="6th image")
image(datsmall[[9]], xaxt='n', yaxt='n', main="9th image")
par(opar)
# VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
image(outsmall, xaxt='n', yaxt='n', main="Wasserstein Median")
image(datsmall[[3]], xaxt='n', yaxt='n', main="3rd image")
image(datsmall[[6]], xaxt='n', yaxt='n', main="6th image")
image(datsmall[[9]], xaxt='n', yaxt='n', main="9th image")
par(opar)
library(T4transport)
pkgdown::build_site()
# EXAMPLE 2 : Medium-size Example for Evolution of Output
#----------------------------------------------------------------------
# EXAMPLE 1
data(digit3)
datsmall = digit3[1:2]
outsmall = imagebary14C(datsmall, maxiter=3)
library(T4transport)
image(outsmall)
library(T4transport)
# EXAMPLE 2 : Medium-size Example for Evolution of Output
#----------------------------------------------------------------------
# EXAMPLE 1
data(digit3)
datsmall = digit3[1:2]
outsmall = imagebary15B(datsmall, maxiter=3)
image(outsmall)
library(T4transport)
#----------------------------------------------------------------------
#                      Binned from Two Gaussians
#
# EXAMPLE : Very Small Example for CRAN; just showing how to use it!
#----------------------------------------------------------------------
# GENERATE FROM TWO GAUSSIANS WITH DIFFERENT MEANS
set.seed(100)
x  = stats::rnorm(1000, mean=-4, sd=0.5)
y  = stats::rnorm(1000, mean=+4, sd=0.5)
bk = seq(from=-10, to=10, length.out=20)
# HISTOGRAMS WITH COMMON BREAKS
histxy = list()
histxy[[1]] = hist(x, breaks=bk, plot=FALSE)
histxy[[2]] = hist(y, breaks=bk, plot=FALSE)
# COMPUTE
hh = histbary15B(histxy, maxiter=5)
# VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2))
barplot(histxy[[1]]$density, col=rgb(0,0,1,1/4),
ylim=c(0, 0.75), main="Two Histograms")
barplot(histxy[[2]]$density, col=rgb(1,0,0,1/4),
ylim=c(0, 0.75), add=TRUE)
barplot(hh$density, main="Barycenter",
ylim=c(0, 0.75))
par(opar)
#' #----------------------------------------------------------------------
#' # GENERATE FROM TWO GAUSSIANS WITH DIFFERENT MEANS
#' set.seed(100)
#' x  = stats::rnorm(1000, mean=-4, sd=0.5)
#' y  = stats::rnorm(1000, mean=+4, sd=0.5)
#' bk = seq(from=-10, to=10, length.out=20)
#'
#' # HISTOGRAMS WITH COMMON BREAKS
#' histxy = list()
#' histxy[[1]] = hist(x, breaks=bk, plot=FALSE)
#' histxy[[2]] = hist(y, breaks=bk, plot=FALSE)
hobj1 = histxy[[1]]
hobj2 = histxy[[2]]
# extract information
vec_x  = hobj1$mids
vec_y1 = hobj1$density
vec_y2 = hobj2$density
vec_x
vec_y1
yvec_y2
vec_y2
# (01) hist_dist2dis ------------------------------------------------------
#' @keywords internal
#' @noRd
hist_dist2dis <- function(vec_x, vec_y1, vec_y2, p=2.0){
# numerical integration
n = length(vec_x)
output  = 0
vec_ysq = ((vec_y1 - vec_y2)^p)
for (i in 1:(n-1)){
output = output + ((vec_ysq[i]+vec_ysq[i+1])/2)*(vec_x[i+1]-vec_x[i])
}
return((output^(1/p)))
}
# (01) hist_dist2obj ------------------------------------------------------
#' @keywords internal
#' @noRd
hist_dist2obj <- function(hobj1, hobj2, p=2.0){
# extract information
vec_x   = hobj1$mids
vec_y1  = hobj1$density
vec_y2  = hobj2$density
# integrate
n = length(vec_x)
output  = 0
vec_ysq = ((vec_y1 - vec_y2)^2)
for (i in 1:(n-1)){
output = output + ((vec_ysq[i]+vec_ysq[i+1])/2)*(vec_x[i+1]-vec_x[i])
}
return(sqrt(output))
}
hist_dist2obj(hobj1, hobj2)
xx = hobj1$mids
y1 = hobj1$density
y2 = hobj2$density
hist_dist2dis(xx,y1,y2)
rm(list=ls())
library(T4transport)
library(T4transport)
set.seed(100)
x  = stats::rnorm(1000, mean=-4, sd=0.5)
y  = stats::rnorm(1000, mean=+4, sd=0.5)
bk = seq(from=-10, to=10, length.out=20)
# HISTOGRAMS WITH COMMON BREAKS
histxy = list()
histxy[[1]] = hist(x, breaks=bk, plot=FALSE)
histxy[[2]] = hist(y, breaks=bk, plot=FALSE)
# COMPUTE
hmean = histbary15B(histxy)
hmeds = histmed22Y(histxy)
hmean = histbary15B(histxy)
hmeds = histmed22Y(histxy)
# VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3))
barplot(histxy[[1]]$density, col=rgb(0,0,1,1/4),
ylim=c(0, 1.05), main="Two Histograms")
barplot(histxy[[2]]$density, col=rgb(1,0,0,1/4),
ylim=c(0, 1.05), add=TRUE)
barplot(hmean$density, main="Barycenter",
ylim=c(0, 1.05))
barplot(hmeds$density, main="Wasserstein Median",
ylim=c(0, 1.05))
par(opar)
hmean = histbary15B(histxy)
hmeds = histmed22Y(histxy)
# VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3))
barplot(histxy[[1]]$density, col=rgb(0,0,1,1/4),
ylim=c(0, 1.05), main="Two Histograms")
barplot(histxy[[2]]$density, col=rgb(1,0,0,1/4),
ylim=c(0, 1.05), add=TRUE)
barplot(hmean$density, main="Barycenter",
ylim=c(0, 1.05))
barplot(hmeds$density, main="Wasserstein Median",
ylim=c(0, 1.05))
par(opar)
hmeds
plot(hmeds)
plot(hmean)
plot(hmeds)
library(T4transport)
# GENERATE FROM TWO GAUSSIANS WITH DIFFERENT MEANS
set.seed(100)
x  = stats::rnorm(1000, mean=-4, sd=0.5)
y  = stats::rnorm(1000, mean=+4, sd=0.5)
bk = seq(from=-10, to=10, length.out=20)
# HISTOGRAMS WITH COMMON BREAKS
histxy = list()
histxy[[1]] = hist(x, breaks=bk, plot=FALSE)
histxy[[2]] = hist(y, breaks=bk, plot=FALSE)
# COMPUTE
hmean = histbary15B(histxy)
hmeds = histmed22Y(histxy)
# VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3))
barplot(histxy[[1]]$density, col=rgb(0,0,1,1/4),
ylim=c(0, 1.05), main="Two Histograms")
barplot(histxy[[2]]$density, col=rgb(1,0,0,1/4),
ylim=c(0, 1.05), add=TRUE)
barplot(hmean$density, main="Barycenter",
ylim=c(0, 1.05))
barplot(hmeds$density, main="Wasserstein Median",
ylim=c(0, 1.05))
par(opar)
library(T4transport)
rm(list=ls())
devtools::load_all(".")
library(T4transport)
#----------------------------------------------------------------------
# GENERATE FROM TWO GAUSSIANS WITH DIFFERENT MEANS
set.seed(100)
x  = stats::rnorm(1000, mean=-4, sd=0.5)
y  = stats::rnorm(1000, mean=+4, sd=0.5)
bk = seq(from=-10, to=10, length.out=20)
# HISTOGRAMS WITH COMMON BREAKS
histxy = list()
histxy[[1]] = hist(x, breaks=bk, plot=FALSE)
histxy[[2]] = hist(y, breaks=bk, plot=FALSE)
# COMPUTE
hmean = histbary15B(histxy)
hmeds = histmed22Y(histxy)
# VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3))
barplot(histxy[[1]]$density, col=rgb(0,0,1,1/4),
ylim=c(0, 1.05), main="Two Histograms")
barplot(histxy[[2]]$density, col=rgb(1,0,0,1/4),
ylim=c(0, 1.05), add=TRUE)
barplot(hmean$density, main="Barycenter",
ylim=c(0, 1.05))
barplot(hmeds$density, main="Wasserstein Median",
ylim=c(0, 1.05))
par(opar)
library(T4transport)
#----------------------------------------------------------------------
#                      Binned from Two Gaussians
#
# EXAMPLE : small example for CRAN for visualization purpose.
#----------------------------------------------------------------------
# GENERATE FROM TWO GAUSSIANS WITH DIFFERENT MEANS
set.seed(100)
x  = stats::rnorm(1000, mean=-4, sd=0.5)
y  = stats::rnorm(1000, mean=+4, sd=0.5)
bk = seq(from=-10, to=10, length.out=20)
# HISTOGRAMS WITH COMMON BREAKS
histxy = list()
histxy[[1]] = hist(x, breaks=bk, plot=FALSE)
histxy[[2]] = hist(y, breaks=bk, plot=FALSE)
# COMPUTE
hmean = histbary15B(histxy)
hmeds = histmed22Y(histxy)
# VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3))
barplot(histxy[[1]]$density, col=rgb(0,0,1,1/4),
ylim=c(0, 1.05), main="Two Histograms")
barplot(histxy[[2]]$density, col=rgb(1,0,0,1/4),
ylim=c(0, 1.05), add=TRUE)
barplot(hmean$density, main="Barycenter",
ylim=c(0, 1.05))
barplot(hmeds$density, main="Wasserstein Median",
ylim=c(0, 1.05))
par(opar)
#----------------------------------------------------------------------
#                      Binned from Two Gaussians
#
# EXAMPLE : small example for CRAN for visualization purpose.
#----------------------------------------------------------------------
# GENERATE FROM TWO GAUSSIANS WITH DIFFERENT MEANS
set.seed(100)
x  = stats::rnorm(1000, mean=-4, sd=0.5)
y  = stats::rnorm(1000, mean=+4, sd=0.5)
bk = seq(from=-10, to=10, length.out=20)
# HISTOGRAMS WITH COMMON BREAKS
histxy = list()
histxy[[1]] = hist(x, breaks=bk, plot=FALSE)
histxy[[2]] = hist(y, breaks=bk, plot=FALSE)
# COMPUTE
hmean = histbary15B(histxy)
hmeds = histmed22Y(histxy)
# VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3))
barplot(histxy[[1]]$density, col=rgb(0,0,1,1/4),
ylim=c(0, 1.05), main="Two Histograms")
barplot(histxy[[2]]$density, col=rgb(1,0,0,1/4),
ylim=c(0, 1.05), add=TRUE)
barplot(hmean$density, main="Barycenter",
ylim=c(0, 1.05))
barplot(hmeds$density, main="Wasserstein Median",
ylim=c(0, 1.05))
par(opar)
hmeds
sum(hmeds$density)
library(T4transport)
rm(list=ls())
library(T4transport)
library(T4transport)
devtools::document()
library(T4transport)
# Type 2 : (mean, sd) = ( 0, 1/5)
# Type 3 : (mean, sd) = (+6, 1/2)
#----------------------------------------------------------------------
# GENERATE PARAMETERS
par_mean = c(-4, 0, +6)
par_vars = c(1, 0.04, 0.25)
# COMPUTE THE WASSERSTEIN MEDIAN
gmeds = gaussmed1d(par_mean, par_vars)
# COMPUTE THE BARYCENTER
gmean = gaussbary1d(par_mean, par_vars)
# QUANTITIES FOR PLOTTING
x_grid  = seq(from=-6, to=8, length.out=1000)
y_dist1 = stats::dnorm(x_grid, mean=par_mean[1], sd=sqrt(par_vars[1]))
y_dist2 = stats::dnorm(x_grid, mean=par_mean[2], sd=sqrt(par_vars[2]))
y_dist3 = stats::dnorm(x_grid, mean=par_mean[3], sd=sqrt(par_vars[3]))
y_gmean = stats::dnorm(x_grid, mean=gmean$mean, sd=sqrt(gmean$var))
y_gmeds = stats::dnorm(x_grid, mean=gmeds$mean, sd=sqrt(gmeds$var))
# VISUALIZE
opar <- par(no.readonly=TRUE)
plot(x_grid, y_gmeds, lwd=3, col="red", type="l",
main="Three Gaussians", xlab="x", ylab="density",
xlim=range(x_grid), ylim=c(0,2.5))
lines(x_grid, y_gmean, lwd=3, col="blue")
lines(x_grid, y_dist1, lwd=1.5, lty=2)
lines(x_grid, y_dist2, lwd=1.5, lty=2)
lines(x_grid, y_dist3, lwd=1.5, lty=2)
legend("topleft", legend=c("Median","Barycenter"),
col=c("red","blue"), lwd=c(3,3), lty=c(1,2))
par(opar)
#----------------------------------------------------------------------
#                         Three Gaussians in R^2
#----------------------------------------------------------------------
# GENERATE PARAMETERS
# means
par_mean = rbind(c(-4,0), c(0,0), c(5,-1))
# covariances
par_vars = array(0,c(2,2,3))
par_vars[,,1] = cbind(c(2,-1),c(-1,2))
par_vars[,,2] = cbind(c(4,+1),c(+1,4))
par_vars[,,3] = diag(c(4,1))
# COMPUTE THE MEDIAN
gmeds = gaussmedpd(par_mean, par_vars)
# COMPUTE THE BARYCENTER
gmean = gaussbarypd(par_mean, par_vars)
# GET COORDINATES FOR DRAWING
pt_type1 = gaussvis2d(par_mean[1,], par_vars[,,1])
pt_type2 = gaussvis2d(par_mean[2,], par_vars[,,2])
pt_type3 = gaussvis2d(par_mean[3,], par_vars[,,3])
pt_gmean = gaussvis2d(gmean$mean, gmean$var)
pt_gmeds = gaussvis2d(gmeds$mean, gmeds$var)
# VISUALIZE
opar <- par(no.readonly=TRUE)
plot(pt_gmean, lwd=2, col="red", type="l",
main="Three Gaussians", xlab="", ylab="",
xlim=c(-6,8), ylim=c(-2.5,2.5))
lines(pt_gmeds, lwd=2, col="blue")
lines(pt_type1, lty=2)
lines(pt_type2, lty=2)
lines(pt_type3, lty=2)
abline(h=0, col="grey80", lty=3)
abline(v=0, col="grey80", lty=3)
legend("topright", legend=c("Median","Barycenter"),
lwd=2, lty=1, col=c("blue","red"))
par(opar)
library(T4transport)
devtools::document()
library(T4transport)
# VISUALIZE
opar <- par(no.readonly=TRUE)
plot(pt_gmean, lwd=2, col="red", type="l",
main="Three Gaussians", xlab="", ylab="",
xlim=c(-6,8), ylim=c(-2.5,2.5))
lines(pt_gmeds, lwd=2, col="blue")
lines(pt_type1, lty=2, lwd=5)
lines(pt_type2, lty=2, lwd=5)
lines(pt_type3, lty=2, lwd=5)
abline(h=0, col="grey80", lty=3)
abline(v=0, col="grey80", lty=3)
legend("topright", legend=c("Median","Barycenter"),
lwd=2, lty=1, col=c("blue","red"))
par(opar)
library(T4transport)
library(T4transport)
pkgdown::build_site()
